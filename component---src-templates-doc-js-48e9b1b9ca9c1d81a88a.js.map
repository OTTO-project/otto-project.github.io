{"version":3,"sources":["webpack:///./src/components/sidenav-accordion.js","webpack:///./src/components/sidenav.js","webpack:///./src/components/layout.js","webpack:///./src/components/doc.js","webpack:///./src/templates/doc.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.find-index.js"],"names":["Overlay","onClick","Fragment","sx","position","top","right","bottom","left","styles","css","body","overflow","AccordionButton","React","forwardRef","ref","open","components","props","theme","merge","ul","listStyle","p","m","a","pl","display","px","py","color","textDecoration","fontSize","fontWeight","zIndex","minWidth","width","maxHeight","overflowX","overflowY","WebkitOverflowScrolling","transition","transform","bg","title","appearance","alignItems","border","borderRadius","viewBox","height","transformOrigin","stroke","strokeWidth","fill","d","AccordionNav","children","className","pathname","links","createNestedLinks","depth","Children","toArray","reduce","acc","child","type","mdxType","last","length","cloneElement","useState","expanded","setExpanded","Link","toggle","i","e","stopPropagation","map","link","href","some","l","j","key","ml","makeTree","nodes","tree","node","path","slug","substr","split","shift","forEach","current","treeNode","part","find","tn","push","treeNodes","query","render","data","calledProps","docs","location","NavLink","useThemeUI","colors","menuOpen","setMenuOpen","nav","useRef","bodyStyles","margin","text","backgroundColor","background","root","justifyContent","flex","onFocus","onBlur","Doc","doc","headingTitle","headings","value","description","excerpt","pageQuery","$export","$find","KEY","forced","Array","P","F","findIndex","callbackfn","this","arguments","undefined"],"mappings":"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","file":"component---src-templates-doc-js-48e9b1b9ca9c1d81a88a.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css, ThemeProvider } from 'theme-ui'\nimport { MDXProvider } from '@mdx-js/react'\nimport React, { useState } from 'react'\nimport { Global } from '@emotion/core'\nimport merge from 'deepmerge'\n\nconst Overlay = ({ onClick }) => (\n  <React.Fragment>\n    <div\n      onClick={onClick}\n      sx={{\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n      }}\n    />\n    <Global\n      styles={css({\n        body: {\n          overflow: ['hidden', 'hidden', 'auto'],\n        },\n      })}\n    />\n  </React.Fragment>\n)\n\nconst createNestedLinks = (children, depth = 0) => {\n  const links = React.Children.toArray(children).reduce((acc, child) => {\n    const type = child.props && child.props.mdxType\n    if (!child.props || !child.props.children) return acc\n    if (type === 'a') return [...acc, child]\n    if (depth > 0 && type === 'ul') {\n      const last = acc[acc.length - 1]\n      acc[acc.length - 1] = React.cloneElement(last, {\n        links: createNestedLinks(child.props.children),\n      })\n      return acc\n    }\n    return [...acc, ...createNestedLinks(child.props.children, depth + 1)]\n  }, [])\n  return links\n}\n\nconst flattenLinks = children =>\n  React.Children.toArray(children).reduce((acc, child) => {\n    if (child.props && child.props.mdxType === 'a') {\n      return [...acc, child]\n    }\n    if (!child.props || !child.props.children) return acc\n    return React.Children.toArray([\n      ...acc,\n      ...flattenLinks(child.props.children),\n    ])\n  }, [])\n\nexport const Sidenav = React.forwardRef(\n  ({ open, styles = {}, components, ...props }, ref) => {\n    return (\n      <ThemeProvider\n        theme={{\n          styles: merge(\n            {\n              ul: {\n                listStyle: 'none',\n                p: 0,\n                m: 0,\n                ul: {\n                  a: {\n                    pl: 4,\n                  },\n                },\n              },\n              a: {\n                display: 'block',\n                px: 2,\n                py: 2,\n                color: 'inherit',\n                textDecoration: 'none',\n                fontSize: 1,\n                fontWeight: 'bold',\n              },\n            },\n            styles\n          ),\n        }}>\n        {open && <Overlay {...props} />}\n        <MDXProvider components={components}>\n          <div\n            {...props}\n            ref={ref}\n            sx={{\n              position: ['fixed', 'sticky'],\n              top: 0,\n              left: 0,\n              bottom: [0, 'auto'],\n              zIndex: 1,\n              minWidth: 0,\n              width: 256,\n              maxHeight: ['100vh', 'none'],\n              overflowX: 'visible',\n              overflowY: 'auto',\n              WebkitOverflowScrolling: 'touch',\n              transition: 'transform .2s ease-out',\n              transform: [open ? 'translateX(0)' : 'translate(-100%)', 'none'],\n              bg: ['background', 'transparent'],\n            }}\n          />\n        </MDXProvider>\n      </ThemeProvider>\n    )\n  }\n)\n\nexport const AccordionButton = props => {\n  const transform = props.open ? 'rotate(-180 8 8)' : 'rotate(0 8 8)'\n\n  return (\n    <button\n      title=\"Expand Section\"\n      {...props}\n      sx={{\n        appearance: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        p: 2,\n        m: 0,\n        border: 0,\n        borderRadius: 0,\n        color: 'inherit',\n        bg: 'transparent',\n        ':hover,:focus': {\n          color: 'primary',\n        },\n      }}>\n      <svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n        <g\n          sx={{\n            transformOrigin: '8 8',\n            transition: 'transform .1s ease-out',\n          }}\n          transform={transform}>\n          <path\n            stroke=\"currentcolor\"\n            strokeWidth=\"2\"\n            fill=\"none\"\n            d=\"M14 6 L8 12 L2 6\"\n          />\n        </g>\n      </svg>\n    </button>\n  )\n}\n\nexport const AccordionNav = React.forwardRef(\n  ({ open, children, components = {}, className, pathname='', ...props }, ref) => {\n    const links = createNestedLinks(children)\n    const [expanded, setExpanded] = useState({})\n    const Link = components.a || 'a'\n\n    const toggle = i => e => {\n      e.stopPropagation()\n      setExpanded({\n        ...expanded,\n        [i]: !expanded[i],\n      })\n    }\n\n    return (\n      <div>\n        {open && <Overlay {...props} />}\n        <div\n          ref={ref}\n          className={className}\n          sx={{\n            position: ['fixed', 'fixed', 'sticky'],\n            top: 0,\n            left: 0,\n            bottom: [0, 0, 'auto'],\n            zIndex: 1,\n            minWidth: 0,\n            width: 256,\n            maxHeight: ['100vh', '100vh', 'none'],\n            overflowX: 'visible',\n            overflowY: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            transition: 'transform .2s ease-out',\n            transform: [open ? 'translateX(0)' : 'translate(-100%)', open ? 'translateX(0)' : 'translate(-100%)', 'none'],\n            bg: ['background', 'background', 'transparent'],\n          }}>\n          <ul\n            sx={{\n              listStyle: 'none',\n              p: 0,\n              m: 0,\n            }}>\n            {links.map((link, i) => {\n              if (link.props.href === pathname ||\n                  link.props.links.some((l, j) => l.props.href === pathname)) {\n                expanded[i] = true\n              }\n              return (\n                <li key={i}>\n                  <div\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}>\n                    <Link\n                      href={link.props.href}\n                      children={link.props.children}\n                      className={link.props.className}\n                    />\n                    {link.props.links && link.props.links.length > 0 && (\n                      <AccordionButton\n                        open={expanded[i]}\n                        sx={{\n                          ml: 'auto',\n                        }}\n                        onClick={toggle(i)}\n                      />\n                    )}\n                  </div>\n                  {expanded[i] && (\n                    <ul\n                      sx={{\n                        listStyle: 'none',\n                        m: 0,\n                        p: 0,\n                        pl: 3,\n                      }}>\n                      {link.props.links.map((l, j) => (\n                        <li key={j}>\n                          <Link\n                            href={l.props.href}\n                            children={l.props.children}\n                            className={l.props.className}\n                          />\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n)\n\nconst removeSlash = str => (str.length > 1 ? str.replace(/\\/$/, '') : str)\n\nconst PaginationLink = ({\n  label,\n  children,\n  mdxType,\n  originalType,\n  parentName,\n  ...props\n}) => (\n  <a\n    {...props}\n    sx={{\n      fontSize: 1,\n      color: 'inherit',\n      textDecoration: 'none',\n      fontWeight: 'bold',\n    }}>\n    <div>{label}</div>\n    <div\n      sx={{\n        fontSize: 3,\n      }}>\n      {children}\n    </div>\n  </a>\n)\n\nexport const Pagination = ({ pathname = '', children, ...props }) => {\n  const links = flattenLinks(children)\n  const index = links.findIndex(\n    link => link.props.href === removeSlash(pathname)\n  )\n  const hasPagination = index > -1\n  const previous = links[index - 1]\n  const next = links[index + 1]\n\n  return (\n    <div\n      {...props}\n      sx={{\n        display: 'flex',\n      }}>\n      {hasPagination && previous && (\n        <PaginationLink {...previous.props} label=\"Previous:\" />\n      )}\n      <div sx={{ mx: 'auto' }} />\n      {hasPagination && next && (\n        <PaginationLink {...next.props} label=\"Next:\" />\n      )}\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { AccordionNav } from './sidenav-accordion'\nimport { StaticQuery, graphql } from 'gatsby'\nimport NavLink from './nav-link'\nimport { Location } from '@reach/router'\n\nconst makeTree = nodes => {\n  var tree = [];\n  if (!nodes) return;\n  const paths = nodes.map(node => {\n    // remove first / and split path\n    var path = node.slug.substr(1).split(\"/\")\n    path.shift()\n    return {...node, path}\n  })\n  paths.forEach( node => {\n    var current = tree\n    var treeNode = null;\n    for (const part of node.path) {\n      treeNode = current.find(tn => tn.path === part)\n      if (!treeNode) {\n        treeNode = {\n          path: part,\n          node: null,\n          children: [],\n        }\n        current.push(treeNode);\n      }\n      current = treeNode.children\n    }\n    if (!treeNode) {\n      treeNode = {\n        path: [],\n        node: null,\n        children: [],\n      }\n      tree.push(treeNode);\n    }\n    treeNode.node = node\n  });\n  return tree;\n}\n\nfunction treeNode(tree) {\n  return (\n  <li mdxType=\"li\">\n    <a mdxType=\"a\" href={ tree.node.slug }>{ tree.node.title }</a>\n    { treeNodes(tree.children) }\n  </li>\n  )\n}\n\nfunction treeNodes(tree) {\n  if (!tree) return null\n  const children = tree.map(treeNode);\n  return <ul mdxType=\"ul\" children={children}/>\n}\n\nconst render = (data, props) => {\n  const tree = makeTree(data.docs.nodes)\n  const children = treeNodes(tree);\n  return (\n    <Location\n      children={({ location }) => (\n        <AccordionNav {...props } components={{ a: NavLink}} pathname={location.pathname} children={children}/>\n        )}\n        />)\n}\n\nconst query = graphql`\n{\n  docs: allDocs(sort: { fields: slug, order: ASC }) {\n    nodes {\n      id\n      slug\n      title\n    }\n  }\n}\n`\n\nexport default (props) => {\n  const renderWithProps = (data, calledProps) => render(data, props)\n  return (\n    <StaticQuery\n      query={ query }\n      render={ renderWithProps }\n    />\n  )\n}\n\n","/** @jsx jsx */\nimport { useState, useRef } from 'react'\nimport { Global } from '@emotion/core'\nimport { Styled, Layout, Main, Container, jsx, useThemeUI } from 'theme-ui'\n\nimport Header from './header'\nimport Sidenav from './sidenav'\n\nexport default ({ children }) => {\n  const { theme: { colors = {} } } = useThemeUI()\n  const [menuOpen, setMenuOpen] = useState(false)\n  const nav = useRef(null)\n\n  const bodyStyles = {\n    body: {\n      margin: 0,\n      color: colors.text,\n      backgroundColor: colors.background\n    }\n  }\n\n  return (\n    <Styled.root>\n      <Global styles={bodyStyles} />\n      <Layout>\n        <Header nav={nav} menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n        <Main>\n            <div\n              ref={nav}\n              sx={{\n                display: ['block', 'block', 'flex'],\n                justifyContent: \"center\",\n                alignItems: \"space-around\",\n                //mx: -3,\n              }}\n            >\n              <div\n                sx={{\n                  display: [null, null, 'block'],\n                  flex: \"0 0 256px\",\n                  width: \"256px\"\n                }}>\n                <Sidenav\n                  open={menuOpen}\n                  onFocus={() => setMenuOpen(true)}\n                  onBlur={() => setMenuOpen(false)}\n                  onClick={() => setMenuOpen(false)}\n                />\n              </div>\n              <div\n                sx={{\n                  overflow: 'hidden',\n                  px: 3,\n                  flex: \"0 1 auto\",\n                  //width: '100%',\n                }}\n              >\n                <Container py={0} px={3} sx={{\n                  }}>\n                  <div sx={{ width: '10000px' }}/>\n                  {children}\n                </Container>\n              </div>\n              <div sx={{\n                display: 'none',\n                display: ['none', 'none', 'none', 'block'],\n                flex: \"0 1 256px\",\n                width: 256,\n              }}/>\n            </div>\n        </Main>\n      </Layout>\n    </Styled.root>\n  )\n}\n","import React from 'react'\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Layout from './layout'\nimport SEO from './seo'\n\nconst Doc = ({ data: { doc } }) => {\n  const headingTitle = doc.headings[0] && doc.headings[0].value\n\n  return (\n    <Layout>\n      <SEO\n        title={doc.title || headingTitle}\n        description={doc.description || doc.excerpt}\n      />\n      <MDXRenderer>{doc.body}</MDXRenderer>\n    </Layout>\n  )\n}\n\nexport default Doc\n","import React from 'react'\nimport { graphql } from \"gatsby\"\n\nimport Doc from '../components/doc'\n\nexport default ({ data }) => (\n  <Doc data={data} />\n)\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    doc: docs(id: { eq: $id }) {\n      id\n      title\n      description\n      excerpt\n      body\n      headings {\n        value\n      }\n    }\n  }\n`\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}